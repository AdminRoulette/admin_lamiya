import React from 'react';
import classes from "../adminOrder.module.scss"

const OrderPaymentText = ({ paymentMethods }) => {
    if (!paymentMethods || paymentMethods.length === 0) {
        return null;
    }

    const renderIcon = (method) => {
        switch (method.type) {
            case 'moneyback':
                return <span className="material-icons">reply</span>;
            case 'cash':
                return <span className="material-symbols-outlined">payments</span>;
            case 'card':
                return <span className="material-symbols-outlined">credit_card</span>;
            case 'account':
                return <span className="material-icons">account_balance</span>;
            case 'mono':
                return <span className="material-icons">credit_card</span>;
            case 'terminal':
                return <span className="material-symbols-outlined">point_of_sale</span>;
            case 'promo':
                return <span className="material-symbols-outlined">redeem</span>
            case 'mono_part':
                return (
                    <svg
                        xmlns="http://www.w3.org/2000/svg"
                        width={20}
                        height={20}
                        viewBox="0 0 512 512">
                        <g fill="none">
                            <path d="M0 0h512v512H0z"/>
                            <path
                                d="M124.803 438.409c-1.76-.438-3.532-.851-5.287-1.328-9.824-2.703-18.407-7.584-25.5-14.923-12.236-12.665-18.82-27.798-19.389-45.48-.207-6.643.56-13.176 2.12-19.63 1.811-7.578 4.644-14.738 8.351-21.574 5.92-10.912 13.62-20.402 22.726-28.795 6.864-6.326 14.342-11.833 22.356-16.61 7.5-4.478 14.504-9.648 21.2-15.247 8.424-7.06 16.276-14.737 24.06-22.485 6.879-6.852 13.674-13.77 20.847-20.3 5.397-4.93 10.997-9.605 17.044-13.713 7.564-5.132 15.628-9.185 24.633-11.147a55.2 55.2 0 0 1 20.384-.63c7.733 1.18 15.206 3.284 22.372 6.443 10.966 4.844 19.912 12.185 27.028 21.83 4.864 6.621 8.7 13.819 12.134 21.25 3.646 7.88 6.848 15.945 10.206 23.952 3.788 9.017 7.766 17.935 12.454 26.532a165 165 0 0 0 16.16 24.275c7.38 9.209 13.626 19.112 18.536 29.86 4.18 9.214 7.225 18.765 8.762 28.777 1.198 7.798 1.438 15.6.464 23.447-1.469 11.92-5.494 22.856-12.71 32.538-6.682 8.973-15.238 15.616-25.338 20.31-7.425 3.45-15.175 5.699-23.373 6.264a58 58 0 0 1-8.717-.014c-.405-.03-.801-.024-1.195-.032-.411.146-.795-.084-1.197-.105-.333-.013-.65-.22-.996-.069l-7.318-1.29c-.252-.263-.608-.173-.91-.267l-1.543-.272c-6.207-1.303-12.037-3.676-17.832-6.146-9.813-4.198-19.293-9.116-29.015-13.51-7.877-3.553-15.892-6.723-24.184-9.187-5.745-1.708-11.611-2.819-17.512-3.651-4.718-.67-9.5-.766-14.266-.718-9.41.114-18.767.998-28.127 1.866-9.903.936-19.804 1.856-29.755 1.736-4.046-.057-8.081-.206-12.073-.95-.818-.155-1.655-.174-2.481-.34-1.047-.246-2.12-.242-3.119-.667M367.885 71.683c12.884 3.907 21.755 12.388 27.57 24.322 3.987 8.184 5.862 16.905 6.382 25.965.432 7.8-.246 15.523-1.852 23.171-2.955 14.055-8.632 26.898-16.998 38.556-5.795 8.079-12.67 15.073-20.855 20.71-7.29 5.007-15.178 8.643-23.916 10.236-6.138 1.117-12.247 1.127-18.323-.32-10.52-2.49-18.795-8.317-25.074-17.052-5.35-7.454-8.41-15.865-9.97-24.855-1.09-6.286-1.346-12.614-.94-18.967a90 90 0 0 1 1.726-12.914 101.5 101.5 0 0 1 10.587-28.51c5.263-9.542 11.835-18.038 20.03-25.226 6.896-6.047 14.552-10.837 23.255-13.837 6.396-2.21 12.968-3.21 19.742-2.792 3.714.265 5.18.552 8.636 1.513M55.713 175.798c.918-3.994 2.337-7.821 4.08-11.526 3.375-7.2 7.935-13.501 14.187-18.483 6.986-5.558 14.938-8.549 23.866-8.747 7.249-.153 14.054 1.661 20.477 4.956 7.383 3.796 13.564 9.126 18.76 15.562 8.075 9.972 13.114 21.379 15.791 33.886a83 83 0 0 1 1.792 19.873c-.095 3.25-.437 6.475-.938 9.688-.959 6.098-2.621 11.97-5.162 17.585-3.387 7.493-8.02 14.041-14.477 19.204-7.41 5.926-15.876 8.932-25.365 8.808-6.963-.09-13.486-2.007-19.628-5.264-8.255-4.396-14.896-10.615-20.39-18.12-5.361-7.304-9.22-15.368-11.81-24.037-2.537-8.501-3.786-17.213-3.56-26.107.043-1.57.127-3.135.19-4.699-.039-.728.152-1.431.106-2.154-.027-.306.066-.573.104-.876.012-.38.248-.744.088-1.153l.99-5.615c.439-.45.368-1.052.504-1.592.1-.403.073-.856.396-1.189m102.113-73.342c2.01-11.14 5.364-20.914 10.789-29.932 4.093-6.82 9.123-12.828 15.503-17.64 6.872-5.198 14.519-8.446 23.165-9.085 8.648-.648 16.676 1.387 24.16 5.698 6.592 3.802 12.023 8.925 16.581 14.985 7.281 9.663 11.789 20.574 14.294 32.356 1.591 7.492 2.261 15.066 2.057 22.714a102 102 0 0 1-1.172 12.967c-.859 5.414-2.146 10.734-3.975 15.906-3.81 10.81-9.406 20.519-17.742 28.506-5.183 4.95-11.086 8.76-17.912 11.051-7.626 2.555-15.356 2.823-23.132.822-7.03-1.803-13.19-5.297-18.677-10.023-7.16-6.157-12.504-13.702-16.563-22.188-4.811-10.075-7.458-20.745-8.363-31.87a100 100 0 0 1 .19-18.248c.22-2.283.466-4.575.798-6.02m313.235 153.278-.229 1.295c-2.386 10.66-7.038 20.272-13.372 29.104-4.977 6.918-10.843 12.988-17.676 18.08-8.771 6.55-18.422 11.16-29.261 13.037-6.494 1.126-12.971 1.1-19.407-.405-9.496-2.233-17.255-7.196-23.142-15-4.859-6.447-7.519-13.793-8.612-21.725-.99-7.112-.646-14.202.82-21.226 3.216-15.446 10.6-28.698 21.362-40.122a77.5 77.5 0 0 1 11.967-10.373c8.914-6.233 18.604-10.529 29.447-12.019 6.163-.832 12.276-.634 18.302.922 9.204 2.37 16.718 7.345 22.406 15.006 5.133 6.913 7.749 14.794 8.672 23.286.51 4.69.46 9.39-.207 14.072l-.23 1.304a82 82 0 0 0-.84 4.764"
                                fill="#000"
                            />
                        </g>
                    </svg>
                );
            case 'privat_part' :
                return (
                    <svg
                        xmlns="http://www.w3.org/2000/svg"
                        width={24}
                        height={22.4}
                        viewBox="0 0 24 22.4"
                        fill="none"
                    >
                        <path
                            fillRule="evenodd"
                            clipRule="evenodd"
                            d="M1.654 15.68a10.6 10.6 0 0 1-1.536-5.505c0-3.733 1.926-7.017 4.838-8.911l5.703 8.994z"
                            fill="#10AF0E"
                        />
                        <path
                            fillRule="evenodd"
                            clipRule="evenodd"
                            d="M13.158 21.247c5.867 0 10.623-4.756 10.623-10.624C23.781 4.757 19.025 0 13.158 0a10.6 10.6 0 0 0-5.786 1.712l5.704 8.994-9.006 5.423a10.62 10.62 0 0 0 9.088 5.118"
                            fill="#FDDC00"
                        />
                    </svg>
                )
            default:
                return null;
        }
    };

    const renderText = (method) => {
        switch (method.type) {
            case 'moneyback': return `Наложка - ${method.amount} грн`;
            case 'cash': return `Готівка - ${method.amount} грн`;
            case 'card': return `На маркетплейсі - ${method.amount} грн`;
            case 'account': return `Оплата на р/р - ${method.amount} грн`;
            case 'terminal': return `Термінал - ${method.amount} грн`;
            case 'mono': return `Моно - ${method.amount} грн`;
            case 'promo': return `Балами - ${method.amount} грн`;
            case 'mono_part': return `Покупка частинами - ${method.amount} грн`;
            case 'privat_part': return `Оплата частинами - ${method.amount} грн`;
            default: return '';
        }
    };

    if (paymentMethods.length === 1) {
        const method = paymentMethods[0];
        return (
            <div>
                {renderIcon(method)}
                <div>{renderText(method)}</div>
            </div>
        );
    }
    return (
        <>
            {paymentMethods.map((method, index) => (
                <div key={index}>
                    {renderIcon(method)}
                    <div>{renderText(method)}</div>
                </div>
            ))}
        </>
    );
};
export default OrderPaymentText;